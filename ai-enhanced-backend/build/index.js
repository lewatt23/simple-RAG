(()=>{"use strict";var e={205:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};if(Object.defineProperty(t,"__esModule",{value:!0}),t.config=void 0,n(r(818)).default.config().error)throw new Error("⚠️  Couldn't find .env file  ⚠️");t.config={MEDIA_SERVE_URL:String(process.env.MEDIA_SERVE_URL),APP_SERVING_URL:String(process.env.APP_SERVING_URL),SERVER_PORT:String(process.env.SERVER_PORT),REVERSE_PROXY:!1,API_BASE_PATH:String(process.env.APP_SERVING_URL),DOMAIN:String(process.env.DOMAIN),MAIN:String(process.env.MAIN),NODE_ENV:String("production"),OPENAI_API_KEY:String(process.env.OPENAI_API_KEY),PINECONE_API_KEY:String(process.env.PINECONE_API_KEY),PINECODE_INDEX:String(process.env.PINECONE_INDEX)},t.default=t.config},199:function(e,t,r){var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.setupServer=void 0;const o=n(r(577)),s=n(r(252)),i=n(r(525)),a=n(r(320)),u=r(573),c=r(369),l=n(r(456)),d=r(205);t.setupServer=async()=>{const e=(0,s.default)();e.use((0,i.default)({contentSecurityPolicy:!1})),e.use((0,o.default)()),e.use(s.default.json()),e.use(s.default.text()),e.use(s.default.urlencoded({extended:!0})),(0,u.setUpMediaEndpoints)(e);const t=(0,s.default)();return(0,c.RegisterRoutes)(e),e.use(d.config.API_BASE_PATH,t),e.use("/docs",((e,t,r)=>{1===l.default.servers.length&&(l.default.servers=[{url:`http://${e.get("host")}`},{url:`https://${e.get("host")}`}],d.config.REVERSE_PROXY&&(l.default.servers=l.default.servers.reverse())),e.swaggerDoc=l.default,r()}),a.default.serve,a.default.setup()),e.use(((e,t,r,n)=>{if(r.headersSent)return n(e);const o={name:e.name,message:e.message,details:e.details};if("fields"in e){const t={};for(const r in e.fields)r.startsWith("body.")?t[r.substr(5)]=e.fields[r]:t[r]=e.fields[r];o.details=t}r.status(e.status||500),r.json(o)})),e}},567:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var o=Object.getOwnPropertyDescriptor(t,r);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,o)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),o=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),t.config=void 0;const s=r(205);Object.defineProperty(t,"config",{enumerable:!0,get:function(){return s.config}}),o(r(199),t)},273:function(e,t,r){var n=this&&this.__decorate||function(e,t,r,n){var o,s=arguments.length,i=s<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,n);else for(var a=e.length-1;a>=0;a--)(o=e[a])&&(i=(s<3?o(i):s>3?o(t,r,i):o(t,r))||i);return s>3&&i&&Object.defineProperty(t,r,i),i},o=this&&this.__param||function(e,t){return function(r,n){t(r,n,e)}};Object.defineProperty(t,"__esModule",{value:!0}),t.ChatController=void 0;const s=r(445),i=r(108);let a=class extends s.Controller{async uploadDocument(e){return await i.ChatModel.uploadAndIndexDocument(e),`File ${e.originalname} uploaded successfully.`}async askQuestion(e){const t=await i.ChatModel.askQuestion(e.question);return console.log("Question received:",t.answer),{answer:t.answer,documentChunks:t.context}}};t.ChatController=a,n([(0,s.Post)("upload"),o(0,(0,s.UploadedFile)())],a.prototype,"uploadDocument",null),n([(0,s.Post)("ask"),o(0,(0,s.Body)())],a.prototype,"askQuestion",null),t.ChatController=a=n([(0,s.Tags)("Chat"),(0,s.Route)("chat")],a)},108:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ChatModel=void 0;const n=r(372);r(416);const o=r(565),s=r(563),i=r(319),a=r(407),u=r(317),c=r(303),l=r(228),d=r(228),p=r(367),f=r(567),h=new l.OpenAIEmbeddings({model:"text-embedding-3-small"}),m=(new p.Pinecone).Index(f.config.PINECODE_INDEX);t.ChatModel={uploadAndIndexDocument:async e=>{const t=await(0,n.saveFile)(e.originalname,e),r=new o.PDFLoader(t),i=await r.load(),a=new s.RecursiveCharacterTextSplitter({chunkSize:1e3,chunkOverlap:200}),u=await a.splitDocuments(i),l=await c.PineconeStore.fromExistingIndex(h,{pineconeIndex:m,maxConcurrency:5});await l.addDocuments(u)},askQuestion:async e=>{const t=new d.ChatOpenAI({model:"gpt-4o"}),r=["You are an assistant for question-answering tasks. ,\n      Use the following pieces of retrieved context to answer ,\n      the question. If you don't know the answer, say that you ,\n      don't know. Use three sentences maximum and keep the ,\n      answer concise.,\n      \n\n,\n      {context}"].join(""),n=u.ChatPromptTemplate.fromMessages([["system",r],["human","{input}"]]),o=await c.PineconeStore.fromExistingIndex(h,{pineconeIndex:m,maxConcurrency:5}),s=await(0,a.createStuffDocumentsChain)({llm:t,prompt:n}),l=await(0,i.createRetrievalChain)({retriever:o.asRetriever(),combineDocsChain:s});return await l.invoke({input:e})}}},573:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var o=Object.getOwnPropertyDescriptor(t,r);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,o)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),o=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),t.setUpMediaEndpoints=void 0;const s=r(372);Object.defineProperty(t,"setUpMediaEndpoints",{enumerable:!0,get:function(){return s.setUpMediaEndpoints}}),o(r(902),t)},902:(e,t)=>{var r;Object.defineProperty(t,"__esModule",{value:!0}),t.EMediaTypes=void 0,function(e){e.Doc="document"}(r||(t.EMediaTypes=r={}))},372:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var o=Object.getOwnPropertyDescriptor(t,r);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,o)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&n(t,e,r);return o(t,e),t},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getLocalMediaUrl=t.setUpMediaEndpoints=t.saveFile=t.filePath=void 0;const a=i(r(252)),u=r(567),c=i(r(928)),l=r(902),d=r(23),p=s(r(896)),f=(0,d.promisify)(p.mkdir),h=((0,d.promisify)(p.stat),(0,d.promisify)(p.default.writeFile)),m=a.default.Router(),g=c.default.join(process.cwd(),"media");t.filePath=e=>c.default.join(l.EMediaTypes.Doc,`${Date.now()}${e}`),t.saveFile=async(e,r)=>{await f(c.default.join(g,l.EMediaTypes.Doc),{recursive:!0});const n=[],o=c.default.join(g,(0,t.filePath)(e));return n.push(h(o,r.buffer)),await Promise.all(n),o},m.use("/"+l.EMediaTypes.Doc,a.default.static(c.default.join(g,l.EMediaTypes.Doc),{maxAge:31536e6,immutable:!0})),t.setUpMediaEndpoints=e=>{e.use("/media",m)},t.getLocalMediaUrl=e=>`${u.config.MAIN}/${(0,t.filePath)(e)}`},369:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.RegisterRoutes=function(e,t){const r=t?.multer||s({limits:{fileSize:314572800}});e.post("/chat/upload",r.fields([{name:"file",maxCount:1,multiple:!1}]),...(0,n.fetchMiddlewares)(o.ChatController),...(0,n.fetchMiddlewares)(o.ChatController.prototype.uploadDocument),(async function(e,t,r){const n={file:{in:"formData",name:"file",required:!0,dataType:"file"}};let s=[];try{s=i.getValidatedArgs({args:n,request:e,response:t});const a=new o.ChatController;await i.apiHandler({methodName:"uploadDocument",controller:a,response:t,next:r,validatedArgs:s,successStatus:void 0})}catch(e){return r(e)}})),e.post("/chat/ask",...(0,n.fetchMiddlewares)(o.ChatController),...(0,n.fetchMiddlewares)(o.ChatController.prototype.askQuestion),(async function(e,t,r){const n={body:{in:"body",name:"body",required:!0,dataType:"nestedObjectLiteral",nestedProperties:{question:{dataType:"string",required:!0}}}};let s=[];try{s=i.getValidatedArgs({args:n,request:e,response:t});const a=new o.ChatController;await i.apiHandler({methodName:"askQuestion",controller:a,response:t,next:r,validatedArgs:s,successStatus:void 0})}catch(e){return r(e)}}))};const n=r(978),o=r(273),s=r(461),i=new n.ExpressTemplateService({},{noImplicitAdditionalProperties:"throw-on-extras",bodyCoercion:!0})},565:e=>{e.exports=require("@langchain/community/document_loaders/fs/pdf")},317:e=>{e.exports=require("@langchain/core/prompts")},228:e=>{e.exports=require("@langchain/openai")},303:e=>{e.exports=require("@langchain/pinecone")},563:e=>{e.exports=require("@langchain/textsplitters")},367:e=>{e.exports=require("@pinecone-database/pinecone")},978:e=>{e.exports=require("@tsoa/runtime")},577:e=>{e.exports=require("cors")},818:e=>{e.exports=require("dotenv")},252:e=>{e.exports=require("express")},525:e=>{e.exports=require("helmet")},407:e=>{e.exports=require("langchain/chains/combine_documents")},319:e=>{e.exports=require("langchain/chains/retrieval")},461:e=>{e.exports=require("multer")},416:e=>{e.exports=require("pdf-parse")},320:e=>{e.exports=require("swagger-ui-express")},445:e=>{e.exports=require("tsoa")},896:e=>{e.exports=require("fs")},928:e=>{e.exports=require("path")},23:e=>{e.exports=require("util")},456:e=>{e.exports=JSON.parse('{"openapi":"3.0.0","components":{"examples":{},"headers":{},"parameters":{},"requestBodies":{},"responses":{},"schemas":{},"securitySchemes":{}},"info":{"title":"ai-enhanced-backend","version":"1.0.0","license":{"name":"MIT"},"contact":{}},"paths":{"/chat/upload":{"post":{"operationId":"UploadDocument","responses":{"200":{"description":"Ok","content":{"application/json":{"schema":{"type":"string"}}}}},"tags":["Chat"],"security":[],"parameters":[],"requestBody":{"required":true,"content":{"multipart/form-data":{"schema":{"type":"object","properties":{"file":{"type":"string","format":"binary"}},"required":["file"]}}}}}},"/chat/ask":{"post":{"operationId":"AskQuestion","responses":{"200":{"description":"Ok","content":{"application/json":{"schema":{"properties":{"documentChunks":{"items":{},"type":"array"},"answer":{"type":"string"}},"required":["documentChunks","answer"],"type":"object"}}}}},"tags":["Chat"],"security":[],"parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"properties":{"question":{"type":"string"}},"required":["question"],"type":"object"}}}}}}},"servers":[{"url":"/"}]}')}},t={};function r(n){var o=t[n];if(void 0!==o)return o.exports;var s=t[n]={exports:{}};return e[n].call(s.exports,s,s.exports,r),s.exports}(()=>{const e=r(567);(0,e.setupServer)().then((t=>{t.listen(e.config.SERVER_PORT,(()=>{console.log(`🚀 Server started on port ${e.config.SERVER_PORT} (${e.config.NODE_ENV})`)}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,